% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkConflicts.R
\name{checkConflicts}
\alias{checkConflicts}
\title{Check for (potential) data format conflicts}
\usage{
checkConflicts(.data,
               vars.for.id = c("study", "primary",
                               "Outc_measure",
                               "Time", "Time_weeks",
                               "sr_clinician"),
               .no.arms = "no.arms",
               .condition.specification = "Cond_spec",
               .group.indicator = "condition",
               .group.names = list("ig" = "ig",
                                   "cg" = "cg"))
}
\arguments{
\item{.data}{Meta-analysis data stored as a \code{data.frame}, to be checked by the function.}

\item{vars.for.id}{\code{character} vector, containing column names of all variables used to construct unique comparison IDs.}

\item{.no.arms}{\code{character}, signifying the name of the variable containing the number of arms included in a study (typically 2).}

\item{.condition.specification}{\code{character}, name of the column containing the specific condition in each trial arm.
For multiarm trials, these conditions \emph{must} be distinct (e.g. \code{"cbt-guided"} and \code{"cbt-unguided"}).}

\item{.group.indicator}{\code{character}, variable encoding if a row represents an intervention or control/reference arm.}

\item{.group.names}{\code{list}, storing the name of the value in \code{.group.indicator} corresponding to the intervention group (\code{"ig"}) and control group (\code{"cg"}).}
}
\value{
The type of data returned by \code{checkConflicts} depends on the outcome of the evaluation. When no problems
have been detected, the function simply returns the dataset provided in \code{.data}.

When (potential) formatting formatting issues have been detected, the function throws a message and returns the affected
studies/\code{data.frame} columns. In particular, results are provided within a \code{list} of three objects:

\itemize{
\item{\code{allConflicts}, a \code{data.frame} containing all affected rows, regardless of conflict type.}
\item{\code{idConflicts}, a \code{data.frame} containing rows with ID/number of arms conflicts.}
\item{\code{cgConflicts}, a \code{data.frame} containing rows with reference arm conflicts
(there must be a unique control/reference group for each comparison).}
}

The returned list has class \code{checkConflicts}.
}
\description{
This function checks for potential data formatting conflicts that may produce errors or incorrect
results when applying the \code{\link{expandMultiarmTrials}} function later on.
}
\examples{
\dontrun{
data("inpatients")
data("psyCtrSubset")

# Example 1: Use defaults and simply run checks
psyCtrSubset \%>\%
  checkDataFormat() \%>\%
  checkConflicts() -> result

# Example 2: Use defaults, run check and directly
# proceed expanding multiarm trials/calculating effects
inpatients \%>\%
  checkDataFormat() \%>\%
  checkConflicts() \%>\%
  expandMultiarmTrials() \%>\%
  calculateEffectSizes() -> result

# Example 3: Define custom IDs (example generates error)
vars.for.id = c("study", "primary",
                "Time", "Time_weeks")
psyCtrSubset \%>\%
  checkDataFormat() \%>\%
  checkConflicts(vars.for.id) \%>\%
  expandMultiarmTrials(vars.for.id) -> res
 }


}
\seealso{
\code{\link{expandMultiarmTrials}}
}
\author{
Mathias Harrer \email{mathias.h.harrer@gmail.com}, Paula Kuper \email{paula.r.kuper@gmail.com}, Pim Cuijpers \email{p.cuijpers@vu.nl}
}
